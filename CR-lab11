CR LAB 11
_______________________________________________________________________________

1)

sudo apt install gcc-arm-linux-gnueabi

2)
dpkg -L gcc-arm-linux-gnueabi

/usr/bin/arm-linux-gnueabi-gcc
L'exécutable est dans: /usr/bin et son nom est:arm-linux-gnueabi

3)
Il faut ouvrir le .bashrc et y ajouter 2 export pour chacunes des variables
export ARCH=arm
export CROSS_COMPILE=arm-linux-gnueabi-

Après avoir démarré un nouveau terminal:
echo $ARCH affiche arm
echo $CROSS_COMPILE affiche arm-linux-gnueabi

4)
<<<<<<< HEAD
arm +TAB affiche la suite de la commande de cross compilation donc on arrive à accéder
=======
cd Desktop	
quand on tape arm- et qu'on fait tabulation la commande est bien retrouvée
elle affiche la suite du com de la chaîne.
>>>>>>> 9221e7de564d20b60a2c1371f1778e877c4c0123

5)
modification du make file:

CC=gcc
OBJ=max.o min.o variance.o

ifeq (${DEBUG},yes)
        CC_OPTIONS=-g -Wall
        MODE= Mode Debug
else
        CC_OPTIONS=
        MODE= Mode Release
endif

mode : test.exe
        @echo "$(MODE)"

max.o : max.c
        ${CROSS_COMPILE}${CC} ${CC_OPTIONS} -c $^
min.o : min.c
        ${CROSS_COMPILE}${CC} ${CC_OPTIONS} -c $^

variance.o : variance.c
        ${CROSS_COMPILE}${CC} ${CC_OPTIONS} -c $^

test.o : test.c
        ${CROSS_COMPILE}${CC} ${CC_OPTIONS} -c $^

test.exe : test.o ${OBJ}
        ${CROSS_COMPILE}${CC} ${CC_OPTIONS} -o $@ $< ${OBJ}

clean: *.o
        @rm *.o
        
install : test.exe
        mv $< $(HOME)

6)
make clean
make

affiche:

arm-linux-gnueabi-gcc  -c test.c
arm-linux-gnueabi-gcc  -c max.c
arm-linux-gnueabi-gcc  -c min.c
arm-linux-gnueabi-gcc  -c variance.c
arm-linux-gnueabi-gcc  -o test.exe test.o max.o min.o variance.o
Mode Release

C'est bien le cross compiler qui est appelé.

7)
Il y a une erreur:
bash: ./test.exe: cannot execute binary file: Exec format error

Explication: Cette erreur est normale car nous essayons d'exécuter un binaire ARM sur notre machine qui comprends le binaire x86. Donc la machine ne comprends pas et affiche une erreur.
